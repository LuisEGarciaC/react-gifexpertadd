{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","type","value","onChange","target","getgif","category","a","urlserch","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","url","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categorias","ReactDOM","render","document","getElementById"],"mappings":"qMAsCeA,EAnCK,SAAC,GAAqB,IAApBC,EAAmB,EAAnBA,cAEpB,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAiBA,OACE,sBAAMC,SAVY,SAACC,GACnBA,EAAEC,iBAECJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACtCN,EAAc,MAKlB,SACE,uBACEO,KAAK,OACLC,MAAOT,EACPU,SAnBoB,SAACP,GACzBF,EAAcE,EAAEQ,OAAOF,a,+BCRdG,EAAM,uCAAG,WAAOC,GAAP,uBAAAC,EAAA,6DACdC,EADc,0DAEkCC,UAAUH,GAF5C,sDAGDI,MAAMF,GAHL,cAGdG,EAHc,gBAIGA,EAAKC,OAJR,uBAIZC,EAJY,EAIZA,KAIFC,EAAOD,EAAKE,KAAI,SAACC,GACrB,MAAO,CACLC,GAAID,EAAIC,GACRC,MAAOF,EAAIE,MACXC,IAAKH,EAAII,OAAOC,iBAAiBF,QAZjB,kBAgBbL,GAhBa,4CAAH,sDCCNQ,EAAc,SAAC,GAAkB,IAAjBJ,EAAgB,EAAhBA,MAAOC,EAAS,EAATA,IAElC,OACE,sBAAKI,UAAU,yCAAf,UACE,qBAAKC,IAAKL,EAAKM,IAAKP,IACpB,4BAAIA,QCHGQ,EAAU,SAAC,GAAkB,IAAhBpB,EAAe,EAAfA,SACxB,ECF0B,SAACA,GAC3B,MAA0Bd,mBAAS,CACjCqB,KAAM,GACNc,SAAS,IAFX,mBAAOC,EAAP,KAAcC,EAAd,KAiBA,OAZAC,qBACE,WACEzB,EAAOC,GAAUyB,MAAK,SAACC,GACnBH,EAAS,CACPhB,KAAMmB,EACNL,SAAS,SAIjB,CAACrB,IAGIsB,EDhBwBK,CAAa3B,GAAhCc,EAAZ,EAAOP,KAAac,EAApB,EAAoBA,QAEpB,OACE,qCACE,oBAAIJ,UAAW,qCAAf,SAAqDjB,IAEnDqB,GAAW,mBAAGJ,UAAW,oCAAd,0BAEb,qBAAKA,UAAU,YAAf,SACGH,EAAOL,KAAI,SAACC,GAAD,OACV,cAAC,EAAD,eAA8BA,GAAZA,EAAIC,aEXjB,SAASiB,IAEtB,MAAoC1C,mBAAS,CAAC,cAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACE,qCAEE,8CACA,cAAC,EAAD,CAAcA,cAAeA,IAC7B,uBACA,6BAEI4C,EAAWpB,KAAK,SAAAT,GAAQ,OACtB,cAAC,EAAD,CAEEA,SAAUA,GADLA,W,MCbnB8B,IAASC,OACL,cAACH,EAAD,IACFI,SAASC,eAAe,W","file":"static/js/main.7bc2e99a.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport PropTypes from 'prop-types';\r\n\r\nconst AddCategory = ({setCategories}) => {\r\n  //valor de inpunt inicialmente y su set\r\n  const [inputValue, setInputValue] = useState('');\r\n\r\n  //handle para los cambios con el valor\r\n  const handleInputChange = (e)=>{\r\n    setInputValue(e.target.value);\r\n  }\r\n\r\n  //handle o disparador del evento en el value\r\n  const HandleSumit = (e)=>{\r\n    e.preventDefault();\r\n\r\n    if(inputValue.trim().length > 2){\r\n      setCategories( cats => [ inputValue, ...cats ] );\r\n        setInputValue('');\r\n    }\r\n\r\n  }\r\n  return (\r\n    <form onSubmit={HandleSumit}>\r\n      <input \r\n        type=\"text\" \r\n        value={inputValue} \r\n        onChange = {handleInputChange}\r\n        />\r\n\r\n    </form>\r\n  );\r\n}\r\n\r\nAddCategory.propTypes = {\r\n  setCategories: PropTypes.func.isRequired\r\n}\r\n\r\nexport default AddCategory;\r\n\r\n","\r\nexport const getgif = async (category) => {\r\n  const urlserch =\r\n    `https://api.giphy.com/v1/gifs/search?limit=10&q=${ encodeURI(category) }&api_key=7nmoLIkbrex7EzqAwfCEZMXXIxsRt26B`;\r\n  const resp = await fetch(urlserch);\r\n  const { data } = await resp.json();\r\n\r\n  //inforamcion de cada gif es\r\n\r\n  const gifs = data.map((img) => {\r\n    return {\r\n      id: img.id,\r\n      title: img.title,\r\n      url: img.images.downsized_medium.url,\r\n    };\r\n  });\r\n  \r\n  return gifs;\r\n\r\n\r\n};","import React from 'react'\r\n\r\nexport const GifGridItem = ({title, url}) => {\r\n\r\n  return (\r\n    <div className=\"animate__animated animate__fadeIn card\">\r\n      <img src={url} alt={title}/>\r\n      <p>{title}</p>\r\n    </div>\r\n  )\r\n}\r\n","import React, {} from \"react\";\r\nimport { useFetchGifs } from \"../hooks/useFetchGifs\";\r\nimport { GifGridItem } from \"./GifGridItem\";\r\n\r\nexport const GifGrid = ({ category }) => {\r\n  const {data:images, loading} = useFetchGifs(category);\r\n\r\n  return (\r\n    <>\r\n      <h3 className =\"animate__animated animate__fadeIn \">{category}</h3>\r\n      {\r\n        loading && <p className =\"animate__animated animate__flash \" >Cargado.....</p> \r\n      }\r\n      <div className=\"card-grid\">\r\n        {images.map((img) => (\r\n          <GifGridItem key={img.id} {...img} />\r\n        ))}\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n","import { useEffect, useState } from \"react\";\r\nimport { getgif } from \"../helpers/getGifs\";\r\n\r\nexport const useFetchGifs = (category) => {\r\n  const [state, setState] = useState({\r\n    data: [],\r\n    loading: true,\r\n  });\r\n\r\n  useEffect(\r\n    () => {\r\n      getgif(category).then((imgs) => {\r\n          setState({\r\n            data: imgs,\r\n            loading: false,\r\n          });\r\n      });\r\n    },\r\n    [category]\r\n  );\r\n\r\n  return state;\r\n};\r\n","import React, {useState} from 'react'\r\nimport AddCategory from './components/AddCategory';\r\nimport { GifGrid } from './components/GifGrid';\r\n\r\nexport default function GifExpertApp(){\r\n  \r\n  const [categorias, setCategories] = useState(['Samurai x']);\r\n\r\n  return (\r\n    <>\r\n    \r\n      <h2>GifExpertApp</h2>\r\n      <AddCategory  setCategories={setCategories} />\r\n      <hr />\r\n      <ol>\r\n        {\r\n          categorias.map( category => (\r\n            <GifGrid \r\n              key={category}\r\n              category={category}\r\n            />\r\n          ))\r\n        }\r\n      </ol>\r\n    </>\r\n  )\r\n}\r\n\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport GifExpertApp from './GifExpertApp';\nimport './index.css';\n\nReactDOM.render(\n    <GifExpertApp />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}